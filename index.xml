<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>LeKovr</title><link>https://lekovr.github.io/</link><description>Recent content on LeKovr</description><generator>Hugo -- gohugo.io</generator><language>ru</language><copyright>&amp;copy;{year}, All Rights Reserved</copyright><lastBuildDate>Sat, 11 Jan 2020 14:09:21 +0900</lastBuildDate><atom:link href="https://lekovr.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>enfist</title><link>https://lekovr.github.io/projects/enfist/</link><pubDate>Thu, 30 Jan 2020 00:38:25 +0900</pubDate><guid>https://lekovr.github.io/projects/enfist/</guid><description>Приложение enfist Docker apisite/enfist Назначение хранилище файлов конфигурации в postgresql с доступом через браузер и АПИ Enfist - это сервис хранения конфигураций приложений. Конфигурации хранятся в БД в виде Key-value таблицы, где ключ (key) формируется из адреса git репозитория organization--repo_name--branch (организация--проект--ветка), а значение (value) - содержимое .env файла.
Доступ к хранилищу ограничивается narra и осуществляется через фронтенд dcape.</description></item><item><title>narra</title><link>https://lekovr.github.io/projects/narra/</link><pubDate>Thu, 30 Jan 2020 00:38:25 +0900</pubDate><guid>https://lekovr.github.io/projects/narra/</guid><description> Приложение narra Docker dopos/narra Назначение сервис OAuth2 авторизации для учетных записей gitea, используемый для ограничения доступа к приватным ресурсам Narra - это OAuth2 прокси для учетных записей gitea, который используется для ограничения доступа к приватным ресурсам:
фронтенд dcape - список развернутых на сервере приложений и сервисов фронтенд traefik фронтенд enfist статистика использования powerdns</description></item><item><title>Резюме</title><link>https://lekovr.github.io/cv/</link><pubDate>Fri, 25 Dec 2020 14:09:21 +0900</pubDate><guid>https://lekovr.github.io/cv/</guid><description>Работа с удовольствием добавляет совершенство в ее результат
Аристотель
Архитектор / Разработчик проектов, использующих
postgresql golang docker Занимаюсь ИТ профессионально с 1994г, специализируюсь на бэкенде и имею опыт в администрировании linux/docker и задачах фронтенда (html/vanilla js).
Не ограничиваюсь кодированием по ТЗ и стараюсь сделать все возможное для успеха проекта в целом.
В командах занимал роли от разработчика до архитектора и тимлида.
Opensource В свободное время и в рамках проектов я участвую в opensource и публикую код тут - github.</description></item><item><title>GoLang Solutions</title><link>https://lekovr.github.io/notes/golang/</link><pubDate>Mon, 17 Feb 2020 00:00:00 +0000</pubDate><guid>https://lekovr.github.io/notes/golang/</guid><description>Ниже приведены мои варианты решения типовых задач, которые у меня возникали при разработке на golang.
func main() Пока я не нашел удобный способ тестировать main(), мой вариант - сократить эту функцию до одной строки и убрать ее из тестов.
Если репозиторий содержит бинарник с именем APP, его функция main() размещается в отдельном файле cmd/APP/main.go со следующим содержанием:
1 2 3 4 5 6 7 8 9 //+build !test // This file holds code which does not covered by tests package main import &amp;#34;os&amp;#34; func main() { Run(os.</description></item><item><title>pgws</title><link>https://lekovr.github.io/archive/projects/pgws/</link><pubDate>Thu, 30 Jan 2020 00:38:25 +0900</pubDate><guid>https://lekovr.github.io/archive/projects/pgws/</guid><description> Приложение pgws назначение технология создания АПИ для хранимых функций Postgresql и автоматического их проксирования http-клиентам</description></item><item><title>PoGoDo</title><link>https://lekovr.github.io/pogodo/</link><pubDate>Sat, 11 Jan 2020 14:09:21 +0900</pubDate><guid>https://lekovr.github.io/pogodo/</guid><description>PoGoDo - это сокращеный вариант обозначения проектов, использующих следующие технологии:
postgesql - данные размещены в этой СУБД golang - интерфейс к данным реализован на этом ЯП docker - деплой приложения использует такие контейнеры</description></item><item><title>Сертификаты BrainBench</title><link>https://lekovr.github.io/archive/brainbench/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://lekovr.github.io/archive/brainbench/</guid><description>В 1999м году я узнал про сервис tekmetrics, где можно было бесплатно и онлайн пройти тесты на знание некоторых ИТ-техник. Позднее он был переименован в brainbench и возможность пройти тесты бесплатно открывалась примерно на месяц каждый год. Платить я не видел смысла, в моем случае это бы не окупилось, но посмотреть, насколько я продвинулся среди остальных участников, в технологиях, которые мне интересны, я посчитал правильным. Достижение максимальной оценки не было целью, я сдавал тесты пакетами до 5 в день, чтобы увидеть свой уровень &amp;ldquo;на вскидку&amp;rdquo;.</description></item></channel></rss>