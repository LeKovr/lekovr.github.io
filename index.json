[{"content":"   Приложение enfist     Docker apisite/enfist   Назначение хранилище файлов конфигурации в postgresql с доступом через браузер и АПИ    Enfist - это сервис хранения конфигураций приложений. Конфигурации хранятся в БД в виде Key-value таблицы, где ключ (key) формируется из адреса git репозитория organization--repo_name--branch (организация--проект--ветка), а значение (value) - содержимое .env файла.\nДоступ к хранилищу ограничивается narra и осуществляется через фронтенд dcape.\nКроме веб-интерфейса, работа с конфигурациями запуска может осуществляться посредством dcape-config-cli.\nПримеры команд, доступных после клонирования (git clone) и настройки (make .env) dcape-config-cli:\n make get TAG=name - получить из хранилища конфигурацию для ключа (тега) name и сохранить в файл name.env make set TAG=name - загрузить файл name.env в хранилище с ключом (тегом) name  Тег содержит значение, равное ключу БД Key-value хранилища: organization--name_of_repo--branch (организация--проект--ветка)\nВ файле конфигурации dcape-config-cli задается два параметра:\n ENFIST_URL - адрес сервиса enfist CIS_TOKEN - токен для авторизации в gitea  ","description":"хранилище файлов конфигурации в postgresql с доступом через браузер и АПИ","id":0,"section":"projects","tags":null,"title":"enfist","uri":"https://lekovr.github.io/projects/enfist/"},{"content":"   Приложение narra     Docker dopos/narra   Назначение сервис OAuth2 авторизации для учетных записей gitea, используемый для ограничения доступа к приватным ресурсам    Narra - это OAuth2 прокси для учетных записей gitea, который используется для ограничения доступа к приватным ресурсам:\n фронтенд dcape - список развернутых на сервере приложений и сервисов фронтенд traefik фронтенд enfist статистика использования powerdns  ","description":"сервис OAuth2 авторизации для учетных записей gitea, используемый для ограничения доступа к приватным ресурсам","id":1,"section":"projects","tags":null,"title":"narra","uri":"https://lekovr.github.io/projects/narra/"},{"content":" Работа с удовольствием добавляет совершенство в ее результат\n  Аристотель\n  Архитектор / Разработчик проектов, использующих\n postgresql golang docker  Занимаюсь ИТ профессионально с 1994г, специализируюсь на бэкенде и имею опыт в администрировании linux/docker и задачах фронтенда (html/vanilla js).\nНе ограничиваюсь кодированием по ТЗ и стараюсь сделать все возможное для успеха проекта в целом.\nВ командах занимал роли от разработчика до архитектора и тимлида.\nOpensource В свободное время и в рамках проектов я участвую в opensource и публикую код тут - github.com/LeKovr.\nРезультаты после 2012 года может быть удобнее смотреть на codersrank. Этот ресурс я использую для информации о том, сколько и какого кода отдано в opensource, объем коммитов сути сделанного не релевантен.\nМой выбор  postgresql - после оракла я увидел СУБД, которая мотивирует не закапываться в лишнее, а делать именно то, для чего, на мой взгляд, хранимый код наиболее эффективен golang - в 98м я выбрал perl из-за CPAN. Обилие современных библиотек, линтеры и генераторы - причина моего выбора golang в 2015м docker - когда он вышел в опенсорс, такие решения как chef, ansible, puppet, на мой взгляд, потеряли актуальность. Все можно сделать проще. Для сложного есть k8s и созданные для (а не допиленные под) него инструменты  Ключевые навыки  postgresql (с 1999) golang (с 2015) docker (с 2014) javascript (с 1999) linux (с 1998)  Также имею реализованные проекты с использованием\n Perl (1999 - 2015) Delphi (1998 - 1999) Oracle PL/SQL (1997 - 1999) PAL/QBE (1994 - 1997) C (1994 - 1995, 2002) Pascal (1990 - 1993)  Что ищу IT-команду, которая\n сопровождает бизнес, привносящий в этот мир что-то материальное и(или) полезное реализовывает проекты с длительным жизненным циклом практикует участие в opensource (в моем личном субъективном мире, в 2021м году, вакансия гофера без ссылки на публичные проекты нанимателя не заслуживает серьезного отношения) имеет в составе сотрудников на удаленке использует linux как основную ОС  Я бы предпочел начинать общение с новой командой с обсуждения её и моих opensoure-проектов.\nPS. а если есть проект, посвященный интеграции хранимого кода postgresql, golang и grpc - я был бы рад добавить в него свои экспертизу и ресурс.\nЧто не ищу Проекты, связанные со спамом, азартными играми и BTC (но не Hyperledger etc).\nКомпанию галеру, которая сводит разработчиков с заказчиком ради процента за сам факт и организацию процесса.\nPS. Это резюме написано по-русски и оно - для русскоязычных команд. Если нужен разговорный английский, это - другое резюме и все общение там тоже на другом языке (если оно, вообще, будет)\nКак работаю Моя специализация - полный цикл разработки программных продуктов, от бизнес-идеи до постпродакшена.\nВ идеале, этот процесс может выглядеть так:\n Есть бизнес-задача и эксперт в предметной области Я подключаюсь и решаю технические вопросы:   архитектура решения необходимые технологии и сторонние приложения  Я делаю прототип Производится его оценка, формируется план дальнейших работ и привлекаются необходимые (IT) ресурсы Согласно плана, выпускается продукт К моменту перехода проекта в стабильный продакшен с обновлениями, я завершаю подготовку команды специалистов, способных его поддерживать без разрушения функциональности, и могу переключиться на следующий проект  Моя задача - получить качественное программное решение бизнес-задачи. Т.к. математическое моделирование и основы БД мне знакомы с ВУЗа, обычно такие решения потом работают годами и требуют поддержки только в рамках изменений первоначальных требований.\nПримеры моих решений  бэкенд тендерной системы биллинг оператора фиксированной связи сайты публикации прайс-листов для региональной газеты и фармацевтической компании расчет и консолидация экономических показателей филиалов банка  Как отдыхаю Хобби-проекты, которые я придумал и развиваю в свободное время:\n procapi - API к хранимым процедурам Postgresql (golang) apisite - Фреймворк на основе procapi и apitpl (golang) pgmig - Пакетная загрузка SQL (миграции) в БД (golang, postgresql) dcape - Деплой сервисов посредством Makefile и docker-compose.yml (docker, make, golang, gitea, traefik, postgresql)  Предпочтения  начало работы - участие в открытом проекте, использующем golang и(или) postgresql формат работы - дистанционная (работаю так с 2006г) ОС - linux  В 2015г мой выбор ЯП изменился с perl на golang. С этого времени все, что не sql и bash, пишу на golang. Заинтересован в участии в проектах, использующих golang совместно с postgresql.\nВпервые инсталлировав linux в 1998г, с 2002г перестал использовать другие ОС.\nОпыт работы ИП Индивидуальный предприниматель\nСентябрь 2020 — настоящее время Результаты завершенных проектов позволили мне взять 6+ месяцев отпуска для личных дел и работы над pet-проектами:\n dcape dopos webtail mqbridge pgmig  Май 2015 — Август 2020 Являясь техлидом проекта tender.pro с 2009г, с 2015г до июля 2020г выполнял эти функции на договорной основе. Моей основной задачей было обеспечение функционирования существующего с 2002г проекта при постоянном наращивании функционала. Кроме этого, мною решались такие задачи, как:\n разработка архитектуры новых подсистем + MVP (пример - dbrpc, grpc-sample, sfs) доработки существующей архитектуры по результатам эксплуатации рефакторинг существующего кода  Цели  доработки системы не должны ее разрушать оптимизировать используемые технологии в целях улучшения качества разработки  Проекты Проекты, которые находились (или находятся) в продакшене более года\n 2019, Доработка gRPC сервисов (golang, postgresql) 2018, enfist. Хранение конфигов в БД для CI/CD 2018, Бэкенд аналитики блокчейн бирж 2017, webtail. Публикация журнальных файлов через websocket 2017, dopos. Инфраструктура для запуска приложений под docker 2017, dcape. Makefile для деплоя сервисов (docker, make, golang) 2016, dbrpc. JSON-RPC Интерфейс к хранимым процедурам БД (golang, postgresql) 2016, Портал авторизации по СМС для Wi-Fi клиентов оператора связи (golang, javascript, sqlite) 2015, Генератор сайта магазина по xls и md, универсальный API обработки заказов (golang)  MVP Другие темы, которыми я занимался на уровне пилотов или подготовки к продакшену\n 2020, RPC-sample, пример сервиса с фронтендом (gRPC/JSON/Websockets/SOAP), вызывающего бэкенд напрямую или через NATS 2020, sfs, пример сервиса загрузки файлов (golang, nats, websockets, vanilla js) 2020, logbase, сервис для размещения в БД Postgresql структурированных журнальных файлов (golang, postgresql) 2020, siwemon, пример построения графиков мониторинга по данным webtail 2019, pgmig. библиотека и утилита загрузки SQL в postgresql (golang, postgresql) 2019, Миграция пакетов Oracle в Postgresql 2019, fiwes. Сервис формирования превью изображений 2018, apisite. SQL API для шаблонов и внешних клиентов (golang, postgresql) 2018, poma. Makefile для загрузки SQL в БД (make, postgresql) 2017, metricinc. Сервис сбора инкрементных метрик (golang, grpc, boltdb, docker)  Все работы выполнялись дистанционно.\nНачальник отдела ИТ (tender.pro) Октябрь 2009 — май 2015\nООО ТендерПро, Москва\nРуководство ИТ подразделениями компании\n группа сопровождения и развития проекта www.tender.pro (perl, sql, js) группа back-end разработки (sql) группа front-end разработки (js, jquery, react) группа администрирования  Дистанционная работа\nЛичные достижения\n  2017 В роли тимлида команды SQL реализовал бэкенд тендерной системы внешнего клиента\n  2017 Внедрил техпроцесс на основе docker (dcape) и двухэтапную систему релизов\n  2010-2012 Спроектировал и вывел в прод АПИ для сайта и клиентов (plpgsql, perl, jQuery)\n  2013, Генератор сайта магазина по xls и md (perl)\n  2012, formEV. Плагин jQuery для просмотра/редактирования форм (javascript)\n  2010, PGWS. JSON-RPC интерфейс к хранимым процедурам БД (PostgreSQL/plpgsql, perl, javascript)\n  MVP Другие темы, которыми я занимался на уровне пилотов или подготовки к продакшену\n 2012, Прототип Удостоверяющего Центра ЭЦП, сервер и клиент (perl, bash) 2009, CCE. Эмулятор работы колл-центра, по заказу ОСС (PostgreSQL/plpgsql, OpenOffice.org Base)  Fullstack (perl) программист (tender.pro) Август 2006 — октябрь 2009\nООО ТендерПро, Москва\nДистанционная работа в составе отдела разработки интернет-проекта.\nПерсональные задачи:1\n доработка текущего, проектирование и разработка новых версий ядра системы (mod_perl, PostgreSQL) проектирование, разработка и сопровождение подсистемы тарификации клиентов на основе очереди задач (perl, plpgsql)  Тимлид биллинга (телеком) Руководитель группы разработки и сопровождения АСР (Автоматизированной Системы Расчетов)\nАвгуст 2002 — сентябрь 2009\nЮжный Телеком, Краснодар\nРуководство группой разработки и эксплуатации биллинговой системы телеком-оператора.\nПервоначальные задачи включали проектирование и разработку систем тарификации и их эксплуатацию, впоследствии добавились задачи эксплуатации внешних систем, построения и развития комплексного решения.\nС ростом круга решаемых задач менялась структура отвечающего за них подразделения и c 2004г его штат составлял 5 человек.\nЗадачи отдела:\n проектирование и разработка ПО для тарификации услуг телеком-оператора (PostgreSQL, perl, bash) разработка подсистем тарификации трафика клиентов (VoIP, NetFlow, Radius) тарификация партнерского трафика и обнаружение ошибок в партнерских системах тарификации (PostgreSQL) разработка коннекторов к новому оборудованию (perl, C) подготовка отчетности и разработка новых отчетных форм (mod_perl)  Личные достижения\n Спроектировал и реализовал при участии команды биллинговую систему телеком-оператора  Проекты Проекты, которые находились (или находятся) в продакшене более года\n 2005, Тарификация звонков в реальном времени с поддержкой кредитов и абонплат (PostgreSQL/plpgsql, gnu-Radius) 2003, Биллинг телеком-оператора (mod_perl, PostgreSQL/plpgsql)  MVP Другие темы, которыми я занимался на уровне пилотов или подготовки к продакшену\n 2008, JAST::Wiki. Система поддержки документации (mod_perl) 2004, OverSSI. Конфигурируемый через SSI web-интерфейс к БД (mod_perl, PostgreSQL/plpgsql) 2002, Библиотека построения диаграмм по XML спецификации (Linux, C, libxml, libgd2)  Fullstack+admin (фарма-опт) WWW-программист, системный администратор\nИюнь 1999 — июль 2002\nФармацевтическая компания \u0026ldquo;Фарма плюс\u0026rdquo;, Краснодар\nПерсональные задачи:\n перевод компании на использование открытого ПО в части работы с интернет разработка сервиса публикации прайс-листов (HTML::Mason) программирование системы offline-заказов (javascript, perl, email) проектирование отказоустойчивого решения для корпоративного сайта (slave frontend - Apache, rsync) построение и администрирование решения для корпоративного доступа в интернет (firewall, email, proxy - Linux)  Проекты Проекты, которые находились (или находятся) в продакшене более года\n 2001, Сервис публикации прайс-листов для региональной газеты (www.price.kuban.su) и фармацевтической компании (www.farma.ru) (mod_perl, HTML::Mason, PostgreSQL) 2000, Миграция интернет-сервисов торговой компании на linux (apache, bind, proftpd, iptables, sendmail, dovecot etc)  Программист (банк) Главный специалист отдела программирования АСУ\nАвгуст 1994 — июнь 1999\nАкционерный банк \u0026ldquo;КубаньБанк\u0026rdquo;, Краснодар\nРазработка систем поддержки принятия решений для отделов планирования (головной банк и филиалы):\n проектирование и разработка решений по анализу деятельности банка (Oracle, Crystal Reports) подготовка балансовой отчетности для РКЦ (Paradox) расчет аналитических показателей по пользовательским параметрам (Paradox) агрегация данных филиалов (результаты расчетов и журналы ошибок) (Paradox)  Личные достижения\n 1999, Система учета движения товаров и услуг для сервисной фирмы (Delphi, Crystal Reports, MS Access) 1996, Система расчета и консолидации экономических показателей филиалов банка (Borland Paradox/PAL) 1997, Клиент/серверная версия системы анализа баланса банка (Oracle,PL/SQL, Delphi, Sybase Power Designer)  Образование Высшее, 1989-1994, Кубанский Госуниверситет, Краснодар. Факультет прикладной математики\nЯзыки  Русский — родной Английский — читаю профессиональную литературу  Увлечения  велосипед стендовая стрельба (скит) путешествия (Токио, Париж, Флоренция)  Личные данные  23.10.1972 lekovr@gmail.com github.com/LeKovr  http://lekovr.github.io/cv/\n","description":"Резюме","id":2,"section":"","tags":null,"title":"Резюме","uri":"https://lekovr.github.io/cv/"},{"content":"Ниже приведены мои варианты решения типовых задач, которые у меня возникали при разработке на golang.\nfunc main() Пока я не нашел удобный способ тестировать main(), мой вариант - сократить эту функцию до одной строки и убрать ее из тестов.\nЕсли репозиторий содержит бинарник с именем APP, его функция main() размещается в отдельном файле cmd/APP/main.go со следующим содержанием:\n1 2 3 4 5 6 7 8 9  //+build !test  // This file holds code which does not covered by tests  package main import \u0026#34;os\u0026#34; func main() { Run(os.Exit) }    log  для случаев, отличных от примитивных, необходима возможность парсить логи приложения. Тут мой выбор - structured logging и вариант его реализации - zap вместе с этим, зашивать конкретную имплементацию журналирования мне представляется не оптимальным, поэтому в пакетах использую logr в тестах, если надо собрать логи и потом проанализировать, я использую genericr  config Для конфигурации приложения наиболее характерный пример для меня - использование библиотеки, у которой есть свой конфиг, при обновлении которого я бы не хотел ничего менять в своем приложении. Я использую go-flags и выглядит это так:\n1 2 3 4 5 6  type Config struct { Addr string `long:\u0026#34;http_addr\u0026#34; default:\u0026#34;localhost:8080\u0026#34; description:\u0026#34;Http listen address\u0026#34;` FS lookupfs.Config `group:\u0026#34;Filesystem Options\u0026#34; namespace:\u0026#34;fs\u0026#34; env-namespace:\u0026#34;FS\u0026#34;` API procapi.Config `group:\u0026#34;API Options\u0026#34; namespace:\u0026#34;api\u0026#34; env-namespace:\u0026#34;API\u0026#34;` }   pg Однажды, в mqbridge, мне понадобилось работать с каналом (db.Listen(channel).Channel()), для этого я выбрал go-pg. В остальных случаях использую pgx\nembedding Выбор пакета для меня определяется ответом на вопрос - \u0026ldquo;Нужна ли UnionFS\u0026rdquo; (т.е. возможность локальным файлом заменить какой-то файл из дистрибутива)\n если нужна - go-imbed если нет - parcello  Начиная с go 1.16, первичный вариант решения - embed\ndeploy Тут все очевидно. Как автор dcape, деплой всех своих приложений я делаю так. Другие варианты - это уже подарки тестовых задач. Добавлю, что, на мой взгляд, навык заворачивания приложения в docker я считаю полезным для программиста, а опыт управления kubernetes - нет. По двум причинам (k8s не единственный и не последний. Разве это не экспертиза уровня webpack?)\n  ","description":"Решения типовых задач","id":3,"section":"notes","tags":null,"title":"GoLang Solutions","uri":"https://lekovr.github.io/notes/golang/"},{"content":"   Приложение pgws     назначение технология создания АПИ для хранимых функций Postgresql и автоматического их проксирования http-клиентам    ","description":"Postgresql webservices","id":4,"section":"archive","tags":null,"title":"pgws","uri":"https://lekovr.github.io/archive/projects/pgws/"},{"content":"PoGoDo - это сокращеный вариант обозначения проектов, использующих следующие технологии:\n postgesql - данные размещены в этой СУБД golang - интерфейс к данным реализован на этом ЯП docker - деплой приложения использует такие контейнеры  ","description":"Postgresql + Golang + Docker projects","id":5,"section":"","tags":null,"title":"PoGoDo","uri":"https://lekovr.github.io/pogodo/"},{"content":"В 1999м году я узнал про сервис tekmetrics, где можно было бесплатно и онлайн пройти тесты на знание некоторых ИТ-техник. Позднее он был переименован в brainbench и возможность пройти тесты бесплатно открывалась примерно на месяц каждый год. Платить я не видел смысла, в моем случае это бы не окупилось, но посмотреть, насколько я продвинулся среди остальных участников, в технологиях, которые мне интересны, я посчитал правильным. Достижение максимальной оценки не было целью, я сдавал тесты пакетами до 5 в день, чтобы увидеть свой уровень \u0026ldquo;на вскидку\u0026rdquo;. Это был интересный челлендж и его результаты я сохранил тут.\nПо годам  1999 (11) 2000 (11) 2001 (6) 2005 (23)  По темам  СУБД Web Администрирование Разное  СУБД RDBMS Concepts    1999-09-19 2000-11-18 2001-12-30     3.93 3.9 3.17    SQL    1999-08-26 2000-11-18     3.93 3.83    Oracle PL/SQL Programmer    1999-09-19     3.0    Web Master Web Programmer    1999-08-28     4.3    WWW Concepts    2000-11-18     4.12    E-Commerce Concepts    2000-11-21     3.4    Perl    2001-01-27     3.12    HTML    1999-08-25 2000-11-18 2001-12-30     4.25 3.72 3.88    Javascript    1999-08-28 2000-11-18 2001-12-30     4.3 3.38 4.13    Администрирование Internet Security    1999-09-03 2000-11-18     3.48 ??    Linux Administrator    1999-09-03 2000-11-15 2001-12-30      3.66     Apache 1.3.12 Administration 2000-11-18 (4.17)\nUnix Korn Shell Scripting 2001-12-30 (4.12)\nРазное High IT Aptitude 1999-08-26 (3.77)\nProgrammer/Analyst Aptitude 2000-11-26 (3.5)\nC Programmer 1999-08-28 (3.06)\nWindows 95 Administrator 1999-08-26: 3.72\n","description":"","id":6,"section":"archive","tags":null,"title":"Сертификаты BrainBench","uri":"https://lekovr.github.io/archive/brainbench/"}]