<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Заметки on LeKovr</title><link>https://lekovr.github.io/notes/</link><description>Recent content in Заметки on LeKovr</description><generator>Hugo -- gohugo.io</generator><language>ru</language><copyright>&amp;copy;{year}, All Rights Reserved</copyright><lastBuildDate>Sat, 11 Jan 2020 14:09:21 +0900</lastBuildDate><atom:link href="https://lekovr.github.io/notes/index.xml" rel="self" type="application/rss+xml"/><item><title>PgSQL: git-миграции</title><link>https://lekovr.github.io/notes/pgmig/</link><pubDate>Fri, 16 Dec 2022 00:00:00 +0000</pubDate><guid>https://lekovr.github.io/notes/pgmig/</guid><description>PgSQL: git-миграции Статус документа: черновик
Задача Найти способ разместить хранимый код в файлах так, чтобы его изменения были доступны через git, т.е. придумать миграцию, в которой изменения как можно большей части SQL будут в тех же файлах
Условия речь идет, прежде всего, о PostgreSQL конструкция CREATE OR REPLACE {FUNCTION|VIEW} позволяет обновить код без потери функциональности кода, использующего эти объекты тест хранимого кода внутри транзакции, вызвав EXCEPTION, отменяет все изменения Базовые идеи файлы с миграциями разделить на 2 группы</description></item><item><title>Хранимки и RPC</title><link>https://lekovr.github.io/notes/stored2rpc/</link><pubDate>Wed, 14 Dec 2022 00:00:00 +0000</pubDate><guid>https://lekovr.github.io/notes/stored2rpc/</guid><description>Взгляд на RPC со стороны хранимок Термины и определения Во избежание разночтений, приведу определения используемых в тексте сокращений:
Хранимка &amp;ldquo;Хранимая процедура или функция (stored procedure, function). Данные объекты БД пишутся на языке процедурного расширения языка SQL, который дополняет язык SQL такими управляющими структурами языка высокого уровня, как ветвления и циклы, и позволяет реализовать любые алгоритмы обработки данных. Хранимый код постоянно хранится на сервере и выполняется по запросу на его запуск из приложений клиентов&amp;rdquo; 1.</description></item><item><title>Готовим Postgresql</title><link>https://lekovr.github.io/notes/pg_cooking/</link><pubDate>Fri, 21 Jan 2022 00:00:00 +0000</pubDate><guid>https://lekovr.github.io/notes/pg_cooking/</guid><description>Вводная На двух предыдущих местах работы у меня были подчиненные в должности &amp;ldquo;SQL-разработчик&amp;rdquo; и я видел, что могут такие ресурсы. Но, в обоих случаях (как и в остальных), вопросы надежности и эффективности работы СУБД оставляли желать лучшего. Далее - о том, как бы я это чинил.
Стратегия Администрирование БД - тиражируемая задача. Вариант &amp;ldquo;научить своего&amp;rdquo; не окупится, имеет смысл привлечь тех, кто такие задачи решает постоянно. При качественных решениях, потребность в них будет со временем уменьшаться</description></item><item><title>opensource</title><link>https://lekovr.github.io/notes/opensource/</link><pubDate>Sat, 04 Dec 2021 00:00:00 +0000</pubDate><guid>https://lekovr.github.io/notes/opensource/</guid><description>Получилось сформулировать ответ на вопрос &amp;ldquo;Почему я топлю за opensource?&amp;rdquo;. Делюсь им.
Очевидные плюсы Наличие у компании проектов с открытым исходным кодом позволяет
показать кандидатам уровень команды предложить кандидатам поучаствовать (да хоть бы и за оплату решения issue) без заморочек с NDA посмотреть на уровень кандидата из его PR Лично я бы на такое пошел даже без оплаты, потому что
в opensource-проекте мой коммит навсегда останется моим и пойдет мне в зачет (в т.</description></item><item><title>Чек-лист вакансии</title><link>https://lekovr.github.io/notes/vacancy_checklist/</link><pubDate>Thu, 07 Oct 2021 00:00:00 +0000</pubDate><guid>https://lekovr.github.io/notes/vacancy_checklist/</guid><description>Мой Чек-лист вакансии Если я прохожу интервью и звучат слова &amp;ldquo;а есть ли у Вас какие-то вопросы?&amp;rdquo;, я открываю эту страницу и зачитываю те пункты, которые на этот момент еще актуальны.
1. Организация работы какую ОС используют разработчики? какой используется диспетчер задач? попадают ли автоматом в задачу связанные с ней коммиты? возникает ли необходимость править непокрытый тестами код, для которого нет документации? называете ли вы свои процессы Agile/Scrum/Kanban и насколько им соответствуете на практике?</description></item><item><title>GoLang Solutions</title><link>https://lekovr.github.io/notes/golang/</link><pubDate>Mon, 17 Feb 2020 00:00:00 +0000</pubDate><guid>https://lekovr.github.io/notes/golang/</guid><description>Ниже приведены мои варианты решения типовых задач, которые у меня возникали при разработке на golang.
func main() Пока я не нашел удобный способ тестировать main(), мой вариант - сократить эту функцию до одной строки и убрать ее из тестов.
Если репозиторий содержит бинарник с именем APP, его функция main() размещается в отдельном файле cmd/APP/main.go со следующим содержанием:
1 2 3 4 5 6 7 8 9 //+build !test // This file holds code which does not covered by tests package main import &amp;#34;os&amp;#34; func main() { Run(os.</description></item><item><title>SQL Solutions</title><link>https://lekovr.github.io/notes/sql/</link><pubDate>Mon, 17 Feb 2020 00:00:00 +0000</pubDate><guid>https://lekovr.github.io/notes/sql/</guid><description>В SQL мне наиболее интересна работа с хранимым кодом в PostgreSQL, но до того, чтобы собрать отдельный справочник, руки пока не доходят. Поэтому наполнение этой страницы еще в начальной стадии
Пример теста 1 2 3 4 5 6 7 8 9 10 11 12 13 SAVEPOINT test_begin; select pgmig.assert_count(1); -- ---------------------------------------------------------------------------- SELECT pgmig.pkg_op_before(&amp;#39;init&amp;#39;, &amp;#39;test_pgmig&amp;#39;, &amp;#39;v0.0&amp;#39;, &amp;#39;git&amp;#39;); SELECT pgmig.assert_eq(&amp;#39;pkg_op_before&amp;#39; , (SELECT jsonb_build_object(&amp;#39;code&amp;#39;,code,&amp;#39;version&amp;#39;,version) FROM pgmig.pkg where code=&amp;#39;test_pgmig&amp;#39;) , &amp;#39;{ &amp;#34;version&amp;#34;: &amp;#34;v0.0&amp;#34;, &amp;#34;code&amp;#34;: &amp;#34;test_pgmig&amp;#34; }&amp;#39;::jsonb ); ROLLBACK TO SAVEPOINT test_begin; Мой топ в апреле 2022 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 select r.</description></item><item><title>English</title><link>https://lekovr.github.io/notes/english/</link><pubDate>Sat, 11 Jan 2020 14:09:21 +0900</pubDate><guid>https://lekovr.github.io/notes/english/</guid><description>Когда-то однажды, в 1998м году, я готовился к релокации в Англию. В какой-то момент уровень моей подготовки был сформулирован как &amp;ldquo;подгони разговорный и мы тебя заберем&amp;rdquo;. Я нашел местную школу с &amp;ldquo;native speaking teachers&amp;rdquo; и их входной тест показал уровень &amp;ldquo;Intermediate&amp;rdquo;. На сегодня для меня это - давно забытый рекорд. Я могу читать и писать, до сих пор основная часть моих знаний приходит из текстов на английском. Но вот &amp;ldquo;участвовать в митингах&amp;rdquo; - тут извините.</description></item></channel></rss>